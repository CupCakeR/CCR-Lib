
local PANEL = {}

CCR:AccessorFunc(PANEL, "infinite_loading", "InfiniteLoading", "Boolean")

function PANEL:Init()
	local vbar = self:GetVBar()
	vbar:SetHideButtons(true)
	vbar:SetWide(10)

	--vbar:SetVisible(false)

	vbar.Paint = function(s, w, h)
		--CCR:SetCacheTarget(self, "vbar")
		CCR:CustomRoundedBox(4, 0, 0, w, h, self:GetThemeColors().Navbar, true, true, true, true)
	end

	vbar.btnGrip.Paint = function(s, w, h)
		--CCR:SetCacheTarget(self, "grip")
		CCR:CustomRoundedBox(4, 0, 0, w, h, self:GetThemeColors().Highlight, true, true, true, true)
	end

	--[[vbar.smoothKick = 0
	vbar.AddScroll = (delta) ->
		self.smoothKick = self.smoothKick + (delta * 2.5)
	end
	vbar.Think = () ->
		self.smoothKick = Lerp(FrameTime() * 25, self.smoothKick, 0)
		self:SetScroll(self:GetScroll() + self.smoothKick)
	end]]

	self.old_OnMouseWheeled = self.OnMouseWheeled
	self.OnMouseWheeled = (s, delta) =>
		self.old_OnMouseWheeled(s, delta)
		self:CheckInfiniteLoading()
	end
end

function PANEL:PerformLayout()
	local Tall = self.pnlCanvas:GetTall()
	local Wide = self:GetWide()
	local YPos = 0

	self:Rebuild()

	self.VBar:SetUp( self:GetTall(), self.pnlCanvas:GetTall() )
	YPos = self.VBar:GetOffset()
	
	self.pnlCanvas:SetPos(0, YPos)
	self.pnlCanvas:SetWide(self:GetWide() - 10 - 8)

	self:Rebuild()

	if ( Tall != self.pnlCanvas:GetTall() ) then
		self.VBar:SetScroll( self.VBar:GetScroll() ) -- Make sure we are not too far down!
	end
end

function PANEL:CheckInfiniteLoading()
	if (self:GetInfiniteLoading()) then
		local bar = self:GetVBar()
		local cur = bar:GetScroll()
		local max = bar.CanvasSize
		
		if (cur >= max && !self.loading && self:CanLoadRequest()) then
			self.loadingIndicator = CCR:NewElement("DPanel", self)
			self.loadingIndicator:Dock(TOP)
			self.loadingIndicator:SetTall(64)
			self.loadingIndicator.Paint = (s, w, h) =>
				CCR:DrawLoading(w / 2, h / 2, 50, color_white)
			end

			self:DoLoadRequest()

			self.loading = true
		end
	end
end

function PANEL:CanLoadRequest()
	return true
end

function PANEL:DoLoadRequest() end

function PANEL:OnLoaded()
	if (!self.loading) then return end

	self.loadingIndicator:Remove()
	self.loading = false

	self:InvalidateLayout(true)
end

function PANEL:Paint(w, h)
	local x, y = self:GetVBar():GetPos()
	local _w, _h = self:GetVBar():GetSize()
	CCR:CustomRoundedBox(4, x, y, _w, _h, self:GetThemeColors().Navbar, true, true, true, true)
end

CCR:RegisterElement("ScrollPanel", PANEL, "DScrollPanel")